Dharmik Patel - dsp187
Dhruv Chaudhry - dc1533
ilab: cp.cs.rutgers.edu

Makefile:
  - make rufs: run this command to compile the rufs.c
  - make check_mt: run this command to check if the DISKFILE is mounted
  - make remove_mt: run this command to remove the mount. Helpfull when rufs exits without calling rufs_destroy()
  - make run_fuse: run this command to run our custum file System
  - make clean: remove all compiled files AND the DISKFILE. (erases our 'HDD')
  - our mount is at /tmp/dsp187/mountdir

Benchmarks:
- simple_test.c:
  - Run time: 1.4 milli seconds
  - Number of data blocks used: 123 dblocks
- test_cases.c:
  - Run time: 1.79 milli seconds
  - Number of data blocks used: 123 dblocks
- Notes:
  - Run time was calculated using 
  - Number of data blocks used, does not include superblocks, inode blocks, and bitmap blocks. It is only the data blocks.
    - just printed out the number of set bits in dblock_bm when rufs_destroy was called

Implementation:
  -
The report should contain the following things:
• Partners names and netids
• Details on the total number of blocks used when running the sample benchmark, the time to run the
benchmark, and briefly explain how you implemented the code
• Any additional steps that we should follow to compile your code
• Any difficulties and issues you faced when completing the project
• If you had issues you were not able to resolve, describe what you think went wrong and how you think
you could have solved them
• Collaboration and References: State clearly all people and external resources (including on the Internet)
that you consulted. What was the nature of your collaboration or usage of these resources?


Break down
Make file:
- make sure there is a dir at /tmp/dsp187/mountdir
  - mkdir -p dsp187/mountdir && cd $_
- run makefile
- run 
  - ./rufs -s /tmp/dsp187/mountdir
  - -d
  - ./rufs -s -d /tmp/dsp187/mountdir
- to check if mounted: 
  - see if findmnt cmd has this line"
  - "│ └─/tmp/dsp187/mountdir                      rufs                                     fuse.rufs         rw,nosuid,nodev,relatime,user_id=90443,group_id=1905221765"
- to unmount:
  - run fusermount -u /tmp/dsp187/mountdir
  - remove disk: rm -r dsp187
Questions:
- 

Block i/o layer:
- all implemented

Bitmap:
- implement get_avail_ino(), and get_avail_blkno()

Inode:
- readi
- writei

Directory and Namei:
- dir_find
- dir_add
- get_node_by_path

The start:
- rufs_mkfs()

File System handlers
- rufs_init
- rufs_destroy
- rufs_getattr

- rufs_opendir - cd
- rufs_readdir - ls
- rufs_mkdir - mkdir


- rufs_create - touch
- rufs_open
- rufs_read
- rufs_write



However we will say the following steps:
1. rufs_mkfs, rufs_init, and rufs_destroy should probably be the first place to start as you need a “disk”
to even start
2. You should probably implement all the helper functions as you will make good use of them when
implementing the rest of the rufs functions.
3. The bitmap operations are the easiest to implement
4. The inode helper operations (readi and writei) are the second easiest
5. The directory operations are the hardest one
6. Once you implement some of the helper functions, you can start using them within the rest of the rufs
functions you have to implement
